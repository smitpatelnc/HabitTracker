@page "/habittracker"
@using HabitTracker.Data
@using HabitTracker.Models
@using Microsoft.EntityFrameworkCore
@inject AppDbContext DbContext
@inject NavigationManager NavigationManager
@inject IJSRuntime jsRuntime

<h2 class="page-title">Habits</h2>

<div class="filter-container">
    <div class="search-container">
        <input type="text" class="search-input" placeholder="Search by name" @bind="searchTerm" />
        <button class="search-button" @onclick="Search">Search</button>
    </div>
    <button class="add-button" @onclick="AddNewHabit">Add New Habit</button>
</div>

@if (habits == null)
{
    <p>Loading...</p>
}
else if (filteredHabits.Count == 0)
{
    <p>No habits found.</p>
}
else
{
    <div class="table-container">
        <table class="habit-table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Completed</th>
                    <th>Date Added</th>
                    <th>Date Completed</th>
                    <th>Priority</th>
                    <th>Category</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var habit in filteredHabits)
                {
                    <tr>
                        <td>@habit.Name</td>
                        <td>@habit.Description</td>
                        <td>@(habit.IsCompleted ? "Yes" : "No")</td>
                        <td>@habit.DateAdded.ToShortDateString()</td>
                        <td>@(habit.DateCompleted.HasValue ? habit.DateCompleted.Value.ToShortDateString() : "-")</td>
                        <td>@habit.Priority</td>
                        <td>@habit.Category</td>
                        <td>
                            <button class="delete-button" @onclick="() => DeleteHabit(habit)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    List<Habit> habits;
    List<Habit> filteredHabits;
    string searchTerm;

    protected override async Task OnInitializedAsync()
    {
        habits = await DbContext.Habits.ToListAsync();
        FilterHabits();
    }

    private void AddNewHabit()
    {
        NavigationManager.NavigateTo("/add-habit");
    }

    private async Task DeleteHabit(Habit habit)
    {
        if (await jsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this habit?"))
        {
            DbContext.Habits.Remove(habit);
            await DbContext.SaveChangesAsync();
            habits.Remove(habit);
            FilterHabits();
        }
    }

    private void FilterHabits()
    {
        filteredHabits = habits.Where(h =>
            string.IsNullOrEmpty(searchTerm) || h.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)
        ).ToList();
    }

    private void Search()
    {
        FilterHabits();
    }
}

<style>
    .page-title {
        font-size: 24px;
        margin-bottom: 20px;
    }

    .filter-container {
        margin-bottom: 20px;
        display: flex;
        justify-content: space-between;
    }

    .search-container {
        display: flex;
        align-items: center;
    }

    .search-input {
        padding: 8px;
        margin-right: 10px;
    }

    .search-button,
    .add-button {
        padding: 8px 20px;
        background-color: #007bff;
        color: #fff;
        border: none;
        cursor: pointer;
    }

    .add-button {
        background-color: #28a745;
        margin-left: 10px;
    }

    .table-container {
        overflow-x: auto;
    }

    .habit-table {
        width: 100%;
        border-collapse: collapse;
    }

        .habit-table th,
        .habit-table td {
            padding: 10px;
            border: 1px solid #ddd;
        }

        .habit-table th {
            background-color: #f2f2f2;
            text-align: left;
        }

    .delete-button {
        padding: 6px 12px;
        background-color: #dc3545;
        color: #fff;
        border: none;
        cursor: pointer;
    }
</style>
